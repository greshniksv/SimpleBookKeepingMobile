// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleBookKeepingMobile.Database.DbContexts;

#nullable disable

namespace SimpleBookKeepingMobile.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.Cost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.CostDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CostId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.ToTable("CostDetails");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Balance")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "Start", "End");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.PlanMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId", "PlanId");

                    b.ToTable("PlanMembers");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.Spend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CostDetailId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CostDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Spends");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.Cost", b =>
                {
                    b.HasOne("SimpleBookKeepingMobile.Database.DbModels.Plan", "Plan")
                        .WithMany("Costs")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.CostDetail", b =>
                {
                    b.HasOne("SimpleBookKeepingMobile.Database.DbModels.Cost", "Cost")
                        .WithMany("CostDetails")
                        .HasForeignKey("CostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cost");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.PlanMember", b =>
                {
                    b.HasOne("SimpleBookKeepingMobile.Database.DbModels.Plan", "Plan")
                        .WithMany("PlanMembers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.Spend", b =>
                {
                    b.HasOne("SimpleBookKeepingMobile.Database.DbModels.CostDetail", "CostDetail")
                        .WithMany("Spends")
                        .HasForeignKey("CostDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostDetail");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.Cost", b =>
                {
                    b.Navigation("CostDetails");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.CostDetail", b =>
                {
                    b.Navigation("Spends");
                });

            modelBuilder.Entity("SimpleBookKeepingMobile.Database.DbModels.Plan", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("PlanMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
